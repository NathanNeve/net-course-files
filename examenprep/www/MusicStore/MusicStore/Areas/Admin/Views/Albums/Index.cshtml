@model MusicStore.Models.ViewModels.ListAlbumsFilterViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>


<h4>Filter op:</h4>
<form asp-action="Index" asp-controller="Albums" method="get">
    <label for="GenreID">@Html.DisplayNameFor(model => model.Genres)</label>
    <select asp-for="GenreID" asp-items="Model.Genres" onchange="this.form.submit()">
        <option value="-1">-- Select a genre --</option>
    </select>
    <br />
    <label class="my-2" for="ArtistID">@Html.DisplayNameFor(model => model.Artists)</label>
    <select asp-for="ArtistID" asp-items="Model.Artists" onchange="this.form.submit()">
        <option value="-1">-- Select an Artist --</option>
    </select>
    <br />
    <label for="Title">@Html.DisplayNameFor(model => model.Title)</label>
    <input type="text" for="Title" name="Title" />
</form>

<br />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Albums[0].Artist)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Albums[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Albums[0].Title)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Albums) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Artist.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.AlbumID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.AlbumID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.AlbumID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>